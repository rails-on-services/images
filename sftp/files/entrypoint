#!/bin/bash
set -Eeo pipefail

function log() {
    echo "[$0] $*" >&2
}

if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ]; then
    echo $AWS_ACCESS_KEY_ID:$AWS_SECRET_ACCESS_KEY > /etc/passwd-s3fs
    chmod 600 /etc/passwd-s3fs
else
    log "Warning: AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY not specified, not creating /etc/passwd-s3fs"
fi

AWS_S3_PARAMS=''
if [ -n "$BUCKET_NAME" ]; then
    if [ -n "$BUCKET_ENDPOINT_URL" ]; then
        AWS_S3_PARAMS="--endpoint-url=$BUCKET_ENDPOINT_URL"
        # use s3fs with a non-Amazon S3 implementation, specify the URL and path-style requests:
        MOUNT_OPTIONS="${MOUNT_OPTIONS} -o url=$BUCKET_ENDPOINT_URL,use_path_request_style"
    fi
    if ! aws s3api ${AWS_S3_PARAMS} head-bucket --bucket ${BUCKET_NAME}; then
        log "Bucket ${BUCKET_NAME} not exist, creating"
        aws s3 ${AWS_S3_PARAMS} mb s3://$BUCKET_NAME
        log "Created bucket ${BUCKET_NAME}"
    fi
    
    log "Making sure prefix sftp/home/ in bucket ${BUCKET_NAME} exists"
    aws s3api ${AWS_S3_PARAMS} put-object --bucket ${BUCKET_NAME} --key sftp/home/ \
        --metadata uid=0,gid=0,mode=493 --content-type application/x-directory
    log "Making sure prefix sftp/config/ in bucket ${BUCKET_NAME} exists"
    aws s3api ${AWS_S3_PARAMS} put-object --bucket ${BUCKET_NAME} --key sftp/config/ \
        --metadata uid=0,gid=0,mode=493 --content-type application/x-directory

    log "Mounting s3://$BUCKET_NAME/sftp/home to /home"
    s3fs $BUCKET_NAME:/sftp/home/ /home -o nonempty,noexec,allow_other,umask=022,multireq_max=5 $MOUNT_OPTIONS
    
    log "Mounting s3://$BUCKET_NAME/sftp/config to /opt/sftp"
    mkdir -p /opt/sftp
    s3fs $BUCKET_NAME:/sftp/config/ /opt/sftp -o nonempty,noexec,allow_other,mp_umask=022,multireq_max=5 $MOUNT_OPTIONS
    sleep 3
else
    log "BUCKET_NAME is not set, skip mounting S3 bucket"
fi

log "Making sure /opt/sftp/sshx exists"
mkdir -p /opt/sftp/sshx

log "Making sure /opt/sftp/sshx/authorized-keys exists"
mkdir -p /opt/sftp/sshx/authorized-keys

# shellcheck disable=2154
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

# Generate unique ssh keys for this container, if needed
if [ ! -f /opt/sftp/sshx/ssh_host_ed25519_key ]; then
    ssh-keygen -t ed25519 -f /opt/sftp/sshx/ssh_host_ed25519_key -N ''
fi
if [ ! -f /opt/sftp/sshx/ssh_host_rsa_key ]; then
    ssh-keygen -t rsa -b 4096 -f /opt/sftp/sshx/ssh_host_rsa_key -N ''
fi

# Paths
userConfPath="/opt/sftp/users.conf"
userCachePath="/var/run/sftp/users.conf"

# Create users on first run
if [ -f "$userConfPath" ] && [ ! -f "$userCachePath" ]; then
    mkdir -p "$(dirname $userCachePath)"
    update-sftp-user --users-conf $userConfPath --users-cache $userCachePath
fi

# Allow running other programs, e.g. bash
if [ $# -eq 0 ] || [ "${1#-}" != "$1" ]; then
    mkdir -p /var/log/supervisor
    # umount s3 bucket and let supervisord to run the s3fs mounts
    umount /opt/sftp
    umount /home
    set -- supervisord -c /etc/supervisor/supervisord.conf "$@"
fi

exec "$@"
